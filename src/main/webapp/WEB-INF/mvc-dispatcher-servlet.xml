<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/websocket 
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">
 
   <!-- 启用Spring基于annotation的DI, 使用户可以在Spring MVC中使用Spring的强大功能。 激活 @Required 
		@Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等标注 -->
 	<context:annotation-config/>
 	
 	<mvc:annotation-driven/> 
    
    <context:component-scan base-package="com.ppshrimp.filmsystem"/>


    <!-- 静态资源处理， css， js， imgs -->
	<mvc:resources mapping="/js/**" location="/WEB-INF/static/js/"/>  
    <mvc:resources mapping="/css/**" location="/WEB-INF/static/css/"/>  
    <mvc:resources mapping="/images/**" location="/WEB-INF/static/images/"/>
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/static/fonts/"/>

	<!-- SpringResourceTemplateResolver automatically integrates with Spring's own -->
	<!-- resource resolution infrastructure, which is highly recommended.          -->
	<bean id="templateResolver"
	       class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
	  <property name="order" value="1" />
	  <property name="prefix" value="/WEB-INF/templates/" />
	  <property name="suffix" value=".html" />
	  <!-- HTML is the default value, added here for the sake of clarity.          -->
	  <property name="templateMode" value="HTML" />
	  <!-- Template cache is true by default. Set to false if you want             -->
	  <!-- templates to be automatically updated when modified.                    -->
	  <property name="cacheable" value="true" />
	  <property name="characterEncoding" value="UTF-8"/>
	</bean>
	    
	<!-- SpringTemplateEngine automatically applies SpringStandardDialect and      -->
	<!-- enables Spring's own MessageSource message resolution mechanisms.         -->
	<bean id="templateEngine"
	      class="org.thymeleaf.spring4.SpringTemplateEngine">
	  <property name="templateResolver" ref="templateResolver" />
	  <!-- Enabling the SpringEL compiler with Spring 4.2.4  or newer can speed up  -->
	  <!-- execution in most scenarios, but might be incompatible with specific    -->
	  <!-- cases when expressions in one template are reused across different data -->
	  <!-- ypes, so this flag is "false" by default for safer backwards            -->
	  <!-- compatibility.                                                          -->
	  <property name="enableSpringELCompiler" value="true" />
	</bean>  
 
	<bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
	  <property name="templateEngine" ref="templateEngine" />
	  <property name="characterEncoding" value="UTF-8"/>
	</bean>
	
	<!-- <mvc:interceptors>  
	    <mvc:interceptor>  
	        <mvc:mapping path="/test/number.do"/>  
	        定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的  
	        <bean class="com.host.app.web.interceptor.LoginInterceptor"/>  
	    </mvc:interceptor>  
    </mvc:interceptors>  -->
    
    <bean id="websocket" class="com.ppshrimp.filmsystem.util.WebsocketEndPoint"/>  
  
	<websocket:handlers>  
	    <websocket:mapping path="/websocket" handler="websocket"/>  
	    <websocket:handshake-interceptors>  
	    <bean class="com.ppshrimp.filmsystem.web.interceptor.HandshakeInterceptor"/>  
	    </websocket:handshake-interceptors>  
	</websocket:handlers>  
	
</beans>


